"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[id]/page",{

/***/ "(app-pages-browser)/./app/components/Player.tsx":
/*!***********************************!*\
  !*** ./app/components/Player.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst Player = (param)=>{\n    let { track, onTrackEnd } = param;\n    _s();\n    const [isYouTube, setIsYouTube] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isSpotify, setIsSpotify] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const youTubePlayerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [playerReady, setPlayerReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const loadYouTubeAPI = ()=>{\n        if (!window.YT) {\n            console.log(\"Loading YouTube API...\");\n            const tag = document.createElement(\"script\");\n            tag.src = \"https://www.youtube.com/iframe_api\";\n            const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n            if (firstScriptTag) {\n                var _firstScriptTag_parentNode;\n                (_firstScriptTag_parentNode = firstScriptTag.parentNode) === null || _firstScriptTag_parentNode === void 0 ? void 0 : _firstScriptTag_parentNode.insertBefore(tag, firstScriptTag);\n            }\n            // Set a timeout to ensure the API is loaded\n            setTimeout(()=>{\n                setPlayerReady(true);\n                console.log(\"YouTube API ready\");\n            }, 1000); // You can adjust this timeout\n        } else {\n            setPlayerReady(true);\n            console.log(\"YouTube API already loaded\");\n        }\n    };\n    const getAccessToken = async ()=>{\n        const response = await fetch(\"/api/spotifyToken\");\n        const data = await response.json();\n        if (response.ok) {\n            const { accessToken, expiresAt } = data;\n            localStorage.setItem(\"spotify_access_token\", accessToken);\n            localStorage.setItem(\"spotify_token_expiration\", expiresAt.toString());\n            console.log(\"Access Token:\", accessToken);\n            return accessToken; // Return the access token\n        } else {\n            console.error(\"Error fetching access token:\", data.error);\n            return null; // Return null in case of error\n        }\n    };\n    const getSpotifyTrackDuration = async (trackId, accessToken)=>{\n        const url = \"https://api.spotify.com/v1/tracks/\".concat(trackId);\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    Authorization: \"Bearer \".concat(accessToken)\n                }\n            });\n            const data = await response.json();\n            const durationMs = data.duration_ms; // Track duration in milliseconds\n            console.log(\"Spotify track duration: \".concat(durationMs, \" ms\"));\n            return durationMs;\n        } catch (error) {\n            console.error(\"Failed to fetch Spotify track duration:\", error);\n            return 180000; // Fallback duration in case of an error\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const playTrack = async ()=>{\n            if (!track) {\n                console.log(\"No track available\");\n                return;\n            }\n            console.log(\"Playing track: \".concat(track.url));\n            const isYouTubeUrl = track.url.includes(\"youtube.com\") || track.url.includes(\"youtu.be\");\n            const isSpotifyUrl = track.url.includes(\"spotify.com\");\n            setIsYouTube(isYouTubeUrl);\n            setIsSpotify(isSpotifyUrl);\n            console.log(\"Track is YouTube: \".concat(isYouTubeUrl, \", Track is Spotify: \").concat(isSpotifyUrl));\n            if (isYouTubeUrl) {\n                loadYouTubeAPI();\n            }\n            if (isSpotifyUrl) {\n                const trackId = track.url.split(\"track/\")[1];\n                if (trackId) {\n                    console.log(\"Fetching Spotify track duration for track ID: \".concat(trackId));\n                    const accessToken = await getAccessToken(); // Call the async function\n                    const duration = await getSpotifyTrackDuration(trackId, accessToken);\n                    console.log(\"Spotify track will play for \".concat(duration, \" ms\"));\n                    setTimeout(()=>{\n                        console.log(\"Spotify track ended\");\n                        onTrackEnd();\n                    }, duration);\n                }\n            }\n            if (playerReady && isYouTubeUrl && youTubePlayerRef.current) {\n                var _track_url_split_;\n                console.log(\"Initializing YouTube player...\");\n                const onYouTubePlayerStateChange = (event)=>{\n                    console.log(\"YouTube player state change:\", event.data);\n                    if (event.data === window.YT.PlayerState.ENDED) {\n                        console.log(\"YouTube video ended\");\n                        onTrackEnd(); // Video ended\n                    }\n                };\n                const player = new window.YT.Player(youTubePlayerRef.current, {\n                    videoId: (_track_url_split_ = track.url.split(\"v=\")[1]) === null || _track_url_split_ === void 0 ? void 0 : _track_url_split_.split(\"&\")[0],\n                    events: {\n                        onStateChange: onYouTubePlayerStateChange\n                    },\n                    playerVars: {\n                        autoplay: 1,\n                        controls: 1\n                    }\n                });\n                return ()=>{\n                    console.log(\"Cleaning up YouTube player\");\n                    player.destroy(); // Clean up the player\n                };\n            }\n        };\n        playTrack(); // Call the async function\n    }, [\n        track,\n        isYouTube,\n        playerReady,\n        onTrackEnd\n    ]);\n    if (!track) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"my-4\",\n        children: [\n            isYouTube && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: youTubePlayerRef,\n                id: \"youtube-player\",\n                style: {\n                    width: \"560px\",\n                    height: \"315px\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n                lineNumber: 151,\n                columnNumber: 9\n            }, undefined),\n            isSpotify && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"iframe\", {\n                src: \"https://open.spotify.com/embed/track/\".concat(track.url.split(\"track/\")[1]),\n                width: \"300\",\n                height: \"380\",\n                allow: \"encrypted-media\",\n                title: track.title,\n                onLoad: ()=>{\n                    console.log(\"Spotify player loaded\");\n                    const trackDurationMs = 180000; // Replace with actual track duration\n                    setTimeout(()=>{\n                        console.log(\"Spotify player reached end\");\n                        onTrackEnd();\n                    }, trackDurationMs);\n                }\n            }, void 0, false, {\n                fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n                lineNumber: 158,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n        lineNumber: 149,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Player, \"gNoZlhpbmF5eKrkVJGQiv8/9W0Y=\");\n_c = Player;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\nvar _c;\n$RefreshReg$(_c, \"Player\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Player.tsx\n"));

/***/ })

});