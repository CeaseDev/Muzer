"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[id]/page",{

/***/ "(app-pages-browser)/./app/components/Player.tsx":
/*!***********************************!*\
  !*** ./app/components/Player.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst Player = (param)=>{\n    let { track, onTrackEnd } = param;\n    _s();\n    const [isYouTube, setIsYouTube] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isSpotify, setIsSpotify] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const youTubePlayerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [playerReady, setPlayerReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const loadYouTubeAPI = ()=>{\n        if (!window.YT) {\n            console.log(\"Loading YouTube API...\");\n            const tag = document.createElement(\"script\");\n            tag.src = \"https://www.youtube.com/iframe_api\";\n            const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n            if (firstScriptTag) {\n                var _firstScriptTag_parentNode;\n                (_firstScriptTag_parentNode = firstScriptTag.parentNode) === null || _firstScriptTag_parentNode === void 0 ? void 0 : _firstScriptTag_parentNode.insertBefore(tag, firstScriptTag);\n            }\n            // Set a timeout to ensure the API is loaded\n            setTimeout(()=>{\n                setPlayerReady(true);\n                console.log(\"YouTube API ready\");\n            }, 1000); // You can adjust this timeout\n        } else {\n            setPlayerReady(true);\n            console.log(\"YouTube API already loaded\");\n        }\n    };\n    const getAccessToken = async ()=>{\n        const response = await fetch(\"/api/spotifyToken\");\n        const data = await response.json();\n        if (response.ok) {\n            const { accessToken, expiresAt } = data;\n            localStorage.setItem(\"spotify_access_token\", accessToken);\n            localStorage.setItem(\"spotify_token_expiration\", expiresAt.toString());\n            console.log(\"Access Token:\", accessToken);\n            return accessToken;\n        } else {\n            console.error(\"Error fetching access token:\", data.error);\n            return null;\n        }\n    };\n    const getSpotifyTrackDuration = async (trackId, accessToken)=>{\n        const url = \"https://api.spotify.com/v1/tracks/\".concat(trackId);\n        try {\n            const response = await fetch(url, {\n                headers: {\n                    Authorization: \"Bearer \".concat(accessToken)\n                }\n            });\n            const data = await response.json();\n            const durationMs = data.duration_ms; // Track duration in milliseconds\n            console.log(\"Spotify track duration: \".concat(durationMs, \" ms\"));\n            return durationMs;\n        } catch (error) {\n            console.error(\"Failed to fetch Spotify track duration:\", error);\n            return 180000; // Fallback duration in case of an error\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!track) {\n            console.log(\"No track available\");\n            return;\n        }\n        console.log(\"Playing track: \".concat(track.url));\n        // Detect if it's a YouTube or Spotify URL\n        const isYouTubeUrl = track.url.includes(\"youtube.com\") || track.url.includes(\"youtu.be\");\n        const isSpotifyUrl = track.url.includes(\"spotify.com\");\n        setIsYouTube(isYouTubeUrl);\n        setIsSpotify(isSpotifyUrl);\n        console.log(\"Track is YouTube: \".concat(isYouTubeUrl, \", Track is Spotify: \").concat(isSpotifyUrl));\n        // Load YouTube API dynamically if it's a YouTube URL\n        if (isYouTubeUrl) {\n            loadYouTubeAPI();\n        }\n        // Autoplay logic for YouTube and Spotify\n        if (playerReady && isYouTubeUrl && youTubePlayerRef.current) {\n            var _track_url_split_;\n            console.log(\"Initializing YouTube player...\");\n            const onYouTubePlayerStateChange = (event)=>{\n                console.log(\"YouTube player state change:\", event.data);\n                if (event.data === window.YT.PlayerState.ENDED) {\n                    console.log(\"YouTube video ended\");\n                    onTrackEnd(); // Video ended\n                }\n            };\n            const player = new window.YT.Player(youTubePlayerRef.current, {\n                videoId: (_track_url_split_ = track.url.split(\"v=\")[1]) === null || _track_url_split_ === void 0 ? void 0 : _track_url_split_.split(\"&\")[0],\n                events: {\n                    onStateChange: onYouTubePlayerStateChange\n                },\n                playerVars: {\n                    autoplay: 1,\n                    controls: 1\n                }\n            });\n            return ()=>{\n                console.log(\"Cleaning up YouTube player\");\n                player.destroy(); // Clean up the player\n            };\n        }\n        if (isSpotifyUrl) {\n            const trackId = track.url.split(\"track/\")[1];\n            if (trackId) {\n                console.log(\"Fetching Spotify track duration for track ID: \".concat(trackId));\n                const accessToken = getAccessToken();\n                // Fetch the track duration\n                if (accessToken) {\n                    getSpotifyTrackDuration(trackId, accessToken).then((duration)=>{\n                        console.log(\"Spotify track will play for \".concat(duration, \" ms\"));\n                        // Set a timeout to autoplay the next track when the current one finishes\n                        setTimeout(()=>{\n                            console.log(\"Spotify track ended\");\n                            onTrackEnd();\n                        }, duration);\n                    });\n                }\n            }\n        }\n    }, [\n        track,\n        isYouTube,\n        playerReady,\n        onTrackEnd\n    ]);\n    if (!track) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"my-4\",\n        children: [\n            isYouTube && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: youTubePlayerRef,\n                id: \"youtube-player\",\n                style: {\n                    width: \"560px\",\n                    height: \"315px\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n                lineNumber: 155,\n                columnNumber: 9\n            }, undefined),\n            isSpotify && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"iframe\", {\n                src: \"https://open.spotify.com/embed/track/\".concat(track.url.split(\"track/\")[1]),\n                width: \"300\",\n                height: \"380\",\n                allow: \"encrypted-media\",\n                title: track.title,\n                onLoad: ()=>{\n                    console.log(\"Spotify player loaded\");\n                    const trackDurationMs = 180000; // Replace with actual track duration\n                    setTimeout(()=>{\n                        console.log(\"Spotify player reached end\");\n                        onTrackEnd();\n                    }, trackDurationMs);\n                }\n            }, void 0, false, {\n                fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n                lineNumber: 162,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/aayush/projects/muzer/app/components/Player.tsx\",\n        lineNumber: 153,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Player, \"gNoZlhpbmF5eKrkVJGQiv8/9W0Y=\");\n_c = Player;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\nvar _c;\n$RefreshReg$(_c, \"Player\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL1BsYXllci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ29EO0FBZXBELE1BQU1HLFNBQVM7UUFBQyxFQUFFQyxLQUFLLEVBQUVDLFVBQVUsRUFBZTs7SUFDaEQsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUdMLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ00sV0FBV0MsYUFBYSxHQUFHUCwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNUSxtQkFBbUJULDZDQUFNQSxDQUF3QjtJQUN2RCxNQUFNLENBQUNVLGFBQWFDLGVBQWUsR0FBR1YsK0NBQVFBLENBQUM7SUFFL0MsTUFBTVcsaUJBQWlCO1FBQ3JCLElBQUksQ0FBQ0MsT0FBT0MsRUFBRSxFQUFFO1lBQ2RDLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE1BQU1DLE1BQU1DLFNBQVNDLGFBQWEsQ0FBQztZQUNuQ0YsSUFBSUcsR0FBRyxHQUFHO1lBQ1YsTUFBTUMsaUJBQWlCSCxTQUFTSSxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNqRSxJQUFJRCxnQkFBZ0I7b0JBQ2xCQTtpQkFBQUEsNkJBQUFBLGVBQWVFLFVBQVUsY0FBekJGLGlEQUFBQSwyQkFBMkJHLFlBQVksQ0FBQ1AsS0FBS0k7WUFDL0M7WUFFQSw0Q0FBNEM7WUFDNUNJLFdBQVc7Z0JBQ1RkLGVBQWU7Z0JBQ2ZJLFFBQVFDLEdBQUcsQ0FBQztZQUNkLEdBQUcsT0FBTyw4QkFBOEI7UUFDMUMsT0FBTztZQUNMTCxlQUFlO1lBQ2ZJLFFBQVFDLEdBQUcsQ0FBQztRQUNkO0lBQ0Y7SUFFQSxNQUFNVSxpQkFBaUI7UUFDckIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNO1FBQzdCLE1BQU1DLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtRQUVoQyxJQUFJSCxTQUFTSSxFQUFFLEVBQUU7WUFDZixNQUFNLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFFLEdBQUdKO1lBQ25DSyxhQUFhQyxPQUFPLENB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akRoRCxRQUFRQyxHQUFHLENBQUMsK0JBQXdDLE9BQVQrQyxVQUFTO3dCQUNwRCx5RUFBeUU7d0JBQ3pFdEMsV0FBVzs0QkFDVFYsUUFBUUMsR0FBRyxDQUFDOzRCQUNaWjt3QkFDRixHQUFHMkQ7b0JBQ0w7Z0JBQ0o7WUFFRjtRQUNGO0lBRVIsR0FBRztRQUFDNUQ7UUFBT0U7UUFBV0s7UUFBYU47S0FBVztJQUU5QyxJQUFJLENBQUNELE9BQU8sT0FBTztJQUVuQixxQkFDRSw4REFBQzZEO1FBQUlDLFdBQVU7O1lBQ1o1RCwyQkFDQyw4REFBQzJEO2dCQUNDRSxLQUFLekQ7Z0JBQ0wwRCxJQUFHO2dCQUNIQyxPQUFPO29CQUFFQyxPQUFPO29CQUFTQyxRQUFRO2dCQUFROzs7Ozs7WUFHNUMvRCwyQkFDQyw4REFBQ2dFO2dCQUNDbkQsS0FBSyx3Q0FBcUUsT0FBN0JqQixNQUFNcUMsR0FBRyxDQUFDZSxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3pFYyxPQUFNO2dCQUNOQyxRQUFPO2dCQUNQRSxPQUFNO2dCQUNOQyxPQUFPdEUsTUFBTXNFLEtBQUs7Z0JBQ2xCQyxRQUFRO29CQUNOM0QsUUFBUUMsR0FBRyxDQUFDO29CQUNaLE1BQU0yRCxrQkFBa0IsUUFBUSxxQ0FBcUM7b0JBQ3JFbEQsV0FBVzt3QkFDVFYsUUFBUUMsR0FBRyxDQUFDO3dCQUNaWjtvQkFDRixHQUFHdUU7Z0JBQ0w7Ozs7Ozs7Ozs7OztBQUtWO0dBbktNekU7S0FBQUE7QUFxS04sK0RBQWVBLE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvUGxheWVyLnRzeD84NDg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBUcmFjayB9IGZyb20gXCIuLi90eXBlcy90eXBlc1wiO1xuXG4vLyBEZWNsYXJlIFlUIG9uIHRoZSBnbG9iYWwgd2luZG93IG9iamVjdFxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICBZVDogYW55O1xuICB9XG59XG5cbmludGVyZmFjZSBQbGF5ZXJQcm9wcyB7XG4gIHRyYWNrOiBUcmFjayB8IG51bGw7XG4gIG9uVHJhY2tFbmQ6ICgpID0+IHZvaWQ7IC8vIEZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGUgdHJhY2sgZW5kc1xufVxuXG5jb25zdCBQbGF5ZXIgPSAoeyB0cmFjaywgb25UcmFja0VuZCB9OiBQbGF5ZXJQcm9wcykgPT4ge1xuICBjb25zdCBbaXNZb3VUdWJlLCBzZXRJc1lvdVR1YmVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaXNTcG90aWZ5LCBzZXRJc1Nwb3RpZnldID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCB5b3VUdWJlUGxheWVyUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50IHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtwbGF5ZXJSZWFkeSwgc2V0UGxheWVyUmVhZHldID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGxvYWRZb3VUdWJlQVBJID0gKCkgPT4ge1xuICAgIGlmICghd2luZG93LllUKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkxvYWRpbmcgWW91VHViZSBBUEkuLi5cIik7XG4gICAgICBjb25zdCB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgdGFnLnNyYyA9IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaVwiO1xuICAgICAgY29uc3QgZmlyc3RTY3JpcHRUYWcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKVswXTtcbiAgICAgIGlmIChmaXJzdFNjcmlwdFRhZykge1xuICAgICAgICBmaXJzdFNjcmlwdFRhZy5wYXJlbnROb2RlPy5pbnNlcnRCZWZvcmUodGFnLCBmaXJzdFNjcmlwdFRhZyk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNldCBhIHRpbWVvdXQgdG8gZW5zdXJlIHRoZSBBUEkgaXMgbG9hZGVkXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0UGxheWVyUmVhZHkodHJ1ZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiWW91VHViZSBBUEkgcmVhZHlcIik7XG4gICAgICB9LCAxMDAwKTsgLy8gWW91IGNhbiBhZGp1c3QgdGhpcyB0aW1lb3V0XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFBsYXllclJlYWR5KHRydWUpO1xuICAgICAgY29uc29sZS5sb2coXCJZb3VUdWJlIEFQSSBhbHJlYWR5IGxvYWRlZFwiKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSBhc3luYyAoKSA6IFByb21pc2U8c3RyaW5nIHwgbnVsbD4gPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvc3BvdGlmeVRva2VuJyk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAocmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IHsgYWNjZXNzVG9rZW4sIGV4cGlyZXNBdCB9ID0gZGF0YTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzcG90aWZ5X2FjY2Vzc190b2tlbicsIGFjY2Vzc1Rva2VuKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzcG90aWZ5X3Rva2VuX2V4cGlyYXRpb24nLCBleHBpcmVzQXQudG9TdHJpbmcoKSk7XG4gICAgICBjb25zb2xlLmxvZygnQWNjZXNzIFRva2VuOicsIGFjY2Vzc1Rva2VuKTtcbiAgICAgIHJldHVybiBhY2Nlc3NUb2tlbjtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgYWNjZXNzIHRva2VuOicsIGRhdGEuZXJyb3IpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGdldFNwb3RpZnlUcmFja0R1cmF0aW9uID0gYXN5bmMgKHRyYWNrSWQ6IHN0cmluZyAsIGFjY2Vzc1Rva2VuOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkuc3BvdGlmeS5jb20vdjEvdHJhY2tzLyR7dHJhY2tJZH1gO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzVG9rZW59YCxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnN0IGR1cmF0aW9uTXMgPSBkYXRhLmR1cmF0aW9uX21zOyAvLyBUcmFjayBkdXJhdGlvbiBpbiBtaWxsaXNlY29uZHNcbiAgICAgIGNvbnNvbGUubG9nKGBTcG90aWZ5IHRyYWNrIGR1cmF0aW9uOiAke2R1cmF0aW9uTXN9IG1zYCk7XG4gICAgICByZXR1cm4gZHVyYXRpb25NcztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBTcG90aWZ5IHRyYWNrIGR1cmF0aW9uOlwiLCBlcnJvcik7XG4gICAgICByZXR1cm4gMTgwMDAwOyAvLyBGYWxsYmFjayBkdXJhdGlvbiBpbiBjYXNlIG9mIGFuIGVycm9yXG4gICAgfVxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICghdHJhY2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTm8gdHJhY2sgYXZhaWxhYmxlXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgIFxuICAgICAgICAgIGNvbnNvbGUubG9nKGBQbGF5aW5nIHRyYWNrOiAke3RyYWNrLnVybH1gKTtcbiAgICAgIFxuICAgICAgICAgIC8vIERldGVjdCBpZiBpdCdzIGEgWW91VHViZSBvciBTcG90aWZ5IFVSTFxuICAgICAgICAgIGNvbnN0IGlzWW91VHViZVVybCA9IHRyYWNrLnVybC5pbmNsdWRlcyhcInlvdXR1YmUuY29tXCIpIHx8IHRyYWNrLnVybC5pbmNsdWRlcyhcInlvdXR1LmJlXCIpO1xuICAgICAgICAgIGNvbnN0IGlzU3BvdGlmeVVybCA9IHRyYWNrLnVybC5pbmNsdWRlcyhcInNwb3RpZnkuY29tXCIpO1xuICAgICAgICAgIHNldElzWW91VHViZShpc1lvdVR1YmVVcmwpO1xuICAgICAgICAgIHNldElzU3BvdGlmeShpc1Nwb3RpZnlVcmwpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBUcmFjayBpcyBZb3VUdWJlOiAke2lzWW91VHViZVVybH0sIFRyYWNrIGlzIFNwb3RpZnk6ICR7aXNTcG90aWZ5VXJsfWApO1xuICAgICAgXG4gICAgICAgICAgLy8gTG9hZCBZb3VUdWJlIEFQSSBkeW5hbWljYWxseSBpZiBpdCdzIGEgWW91VHViZSBVUkxcbiAgICAgICAgICBpZiAoaXNZb3VUdWJlVXJsKSB7XG4gICAgICAgICAgICBsb2FkWW91VHViZUFQSSgpO1xuICAgICAgICAgIH1cbiAgICAgIFxuICAgICAgICAgIC8vIEF1dG9wbGF5IGxvZ2ljIGZvciBZb3VUdWJlIGFuZCBTcG90aWZ5XG4gICAgICAgICAgaWYgKHBsYXllclJlYWR5ICYmIGlzWW91VHViZVVybCAmJiB5b3VUdWJlUGxheWVyUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiSW5pdGlhbGl6aW5nIFlvdVR1YmUgcGxheWVyLi4uXCIpO1xuICAgICAgICAgICAgY29uc3Qgb25Zb3VUdWJlUGxheWVyU3RhdGVDaGFuZ2UgPSAoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIllvdVR1YmUgcGxheWVyIHN0YXRlIGNoYW5nZTpcIiwgZXZlbnQuZGF0YSk7XG4gICAgICAgICAgICAgIGlmIChldmVudC5kYXRhID09PSB3aW5kb3cuWVQuUGxheWVyU3RhdGUuRU5ERUQpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIllvdVR1YmUgdmlkZW8gZW5kZWRcIik7XG4gICAgICAgICAgICAgICAgb25UcmFja0VuZCgpOyAvLyBWaWRlbyBlbmRlZFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgXG4gICAgICAgICAgICBjb25zdCBwbGF5ZXIgPSBuZXcgd2luZG93LllULlBsYXllcih5b3VUdWJlUGxheWVyUmVmLmN1cnJlbnQsIHtcbiAgICAgICAgICAgICAgdmlkZW9JZDogdHJhY2sudXJsLnNwbGl0KFwidj1cIilbMV0/LnNwbGl0KFwiJlwiKVswXSxcbiAgICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgb25TdGF0ZUNoYW5nZTogb25Zb3VUdWJlUGxheWVyU3RhdGVDaGFuZ2UsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHBsYXllclZhcnM6IHtcbiAgICAgICAgICAgICAgICBhdXRvcGxheTogMSxcbiAgICAgICAgICAgICAgICBjb250cm9sczogMSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgXG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNsZWFuaW5nIHVwIFlvdVR1YmUgcGxheWVyXCIpO1xuICAgICAgICAgICAgICBwbGF5ZXIuZGVzdHJveSgpOyAvLyBDbGVhbiB1cCB0aGUgcGxheWVyXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgIFxuICAgICAgICAgIGlmIChpc1Nwb3RpZnlVcmwpIHtcbiAgICAgICAgICAgIGNvbnN0IHRyYWNrSWQgPSB0cmFjay51cmwuc3BsaXQoXCJ0cmFjay9cIilbMV07XG4gICAgICAgICAgICBpZiAodHJhY2tJZCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgRmV0Y2hpbmcgU3BvdGlmeSB0cmFjayBkdXJhdGlvbiBmb3IgdHJhY2sgSUQ6ICR7dHJhY2tJZH1gKTtcbiAgICAgIFxuICAgICAgICAgICAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IGdldEFjY2Vzc1Rva2VuKCkgOyBcbiAgICAgICAgICAgICAgLy8gRmV0Y2ggdGhlIHRyYWNrIGR1cmF0aW9uXG4gICAgICAgICAgICAgIGlmKGFjY2Vzc1Rva2VuKXtcbiAgICAgICAgICAgICAgICBnZXRTcG90aWZ5VHJhY2tEdXJhdGlvbih0cmFja0lkICwgYWNjZXNzVG9rZW4pLnRoZW4oKGR1cmF0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBTcG90aWZ5IHRyYWNrIHdpbGwgcGxheSBmb3IgJHtkdXJhdGlvbn0gbXNgKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IGEgdGltZW91dCB0byBhdXRvcGxheSB0aGUgbmV4dCB0cmFjayB3aGVuIHRoZSBjdXJyZW50IG9uZSBmaW5pc2hlc1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNwb3RpZnkgdHJhY2sgZW5kZWRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgb25UcmFja0VuZCgpO1xuICAgICAgICAgICAgICAgICAgICB9LCBkdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgXG4gIH0sIFt0cmFjaywgaXNZb3VUdWJlLCBwbGF5ZXJSZWFkeSwgb25UcmFja0VuZF0pO1xuXG4gIGlmICghdHJhY2spIHJldHVybiBudWxsO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJteS00XCI+XG4gICAgICB7aXNZb3VUdWJlICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIHJlZj17eW91VHViZVBsYXllclJlZn1cbiAgICAgICAgICBpZD1cInlvdXR1YmUtcGxheWVyXCJcbiAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCI1NjBweFwiLCBoZWlnaHQ6IFwiMzE1cHhcIiB9fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtpc1Nwb3RpZnkgJiYgKFxuICAgICAgICA8aWZyYW1lXG4gICAgICAgICAgc3JjPXtgaHR0cHM6Ly9vcGVuLnNwb3RpZnkuY29tL2VtYmVkL3RyYWNrLyR7dHJhY2sudXJsLnNwbGl0KFwidHJhY2svXCIpWzFdfWB9XG4gICAgICAgICAgd2lkdGg9XCIzMDBcIlxuICAgICAgICAgIGhlaWdodD1cIjM4MFwiXG4gICAgICAgICAgYWxsb3c9XCJlbmNyeXB0ZWQtbWVkaWFcIlxuICAgICAgICAgIHRpdGxlPXt0cmFjay50aXRsZX1cbiAgICAgICAgICBvbkxvYWQ9eygpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3BvdGlmeSBwbGF5ZXIgbG9hZGVkXCIpO1xuICAgICAgICAgICAgY29uc3QgdHJhY2tEdXJhdGlvbk1zID0gMTgwMDAwOyAvLyBSZXBsYWNlIHdpdGggYWN0dWFsIHRyYWNrIGR1cmF0aW9uXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTcG90aWZ5IHBsYXllciByZWFjaGVkIGVuZFwiKTtcbiAgICAgICAgICAgICAgb25UcmFja0VuZCgpO1xuICAgICAgICAgICAgfSwgdHJhY2tEdXJhdGlvbk1zKTtcbiAgICAgICAgICB9fVxuICAgICAgICA+PC9pZnJhbWU+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGxheWVyO1xuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiUGxheWVyIiwidHJhY2siLCJvblRyYWNrRW5kIiwiaXNZb3VUdWJlIiwic2V0SXNZb3VUdWJlIiwiaXNTcG90aWZ5Iiwic2V0SXNTcG90aWZ5IiwieW91VHViZVBsYXllclJlZiIsInBsYXllclJlYWR5Iiwic2V0UGxheWVyUmVhZHkiLCJsb2FkWW91VHViZUFQSSIsIndpbmRvdyIsIllUIiwiY29uc29sZSIsImxvZyIsInRhZyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImZpcnN0U2NyaXB0VGFnIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwic2V0VGltZW91dCIsImdldEFjY2Vzc1Rva2VuIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwib2siLCJhY2Nlc3NUb2tlbiIsImV4cGlyZXNBdCIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJ0b1N0cmluZyIsImVycm9yIiwiZ2V0U3BvdGlmeVRyYWNrRHVyYXRpb24iLCJ0cmFja0lkIiwidXJsIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJkdXJhdGlvbk1zIiwiZHVyYXRpb25fbXMiLCJpc1lvdVR1YmVVcmwiLCJpbmNsdWRlcyIsImlzU3BvdGlmeVVybCIsImN1cnJlbnQiLCJvbllvdVR1YmVQbGF5ZXJTdGF0ZUNoYW5nZSIsImV2ZW50IiwiUGxheWVyU3RhdGUiLCJFTkRFRCIsInBsYXllciIsInZpZGVvSWQiLCJzcGxpdCIsImV2ZW50cyIsIm9uU3RhdGVDaGFuZ2UiLCJwbGF5ZXJWYXJzIiwiYXV0b3BsYXkiLCJjb250cm9scyIsImRlc3Ryb3kiLCJ0aGVuIiwiZHVyYXRpb24iLCJkaXYiLCJjbGFzc05hbWUiLCJyZWYiLCJpZCIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJpZnJhbWUiLCJhbGxvdyIsInRpdGxlIiwib25Mb2FkIiwidHJhY2tEdXJhdGlvbk1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Player.tsx\n"));

/***/ })

});